apply plugin: 'maven-publish'
apply plugin: 'signing'
task sourcesJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.groovy.srcDirs
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

javadoc {
    description = "生成jar格式的javadoc。"
    // 只显示 protected 和 public 的类和成员
    options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
    options.author = true
    options.version = true
    options.header = project.name
    // 静默javadoc检查（比如不支持@date会报错等），jdk 8+
    options.addStringOption('Xdoclint:none', '-quiet')
    // 防止本地打开中文乱码
    options.addStringOption("charset", "UTF-8")
    // suppress warnings due to cross-module @see and @link references;
    // note that global 'api' task does display all warnings.
    logging.captureStandardError LogLevel.INFO
    // suppress "## warnings" message
    logging.captureStandardOutput LogLevel.INFO
    // 编码一定要配置否则直接出错
    options.encoding = "UTF-8"
    options.charSet = "UTF-8"
}


ext["signing.keyId"] = ""  //GPG指纹后8位
ext["signing.password"] = ""  //GPG密码
ext["signing.secretKeyRingFile"] = "" //GPG私钥
ext["ossrhUsername"] = ""
ext["ossrhPassword"] = ""
def userName = ""
def userPassword = ""
File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    println "Found secret props file, loading props"
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
        if (name == "ossrhUsername") {
            userName = value
        }
        if (name == "ossrhPassword") {
            userPassword = value
        }
    }
} else {
    println "No props file, loading env vars"
}
artifacts {
    archives javadocJar, sourcesJar
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'io.github.peakmain'  //sonatype平台创建的groupId
            artifactId = "plugin"
            version = '1.0.2'  //库版本名
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = "plugin"
                description = "Peakmain ASM plugin!"
                url = "https://github.com/Peakmain/AsmActualCombat"  //github主页地址
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                        comments = 'A business-friendly OSS license'
                    }
                }
                developers {
                    developer {
                        id = "peakmain"
                        name = "peakmain"
                        email = "2726449200@qq.com"
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/Peakmain/AsmActualCombat.git'
                    developerConnection = 'scm:git:ssh://https://github.com/Peakmain/AsmActualCombat.git'
                    //分支地址：
                    url = 'https://github.com/Peakmain/AsmActualCombat/tree/master'
                }
            }
        }
    }

    repositories {
        maven {
            // any other name that's descriptive for you
            name = "Releases"

            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            // to the release repo directly
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            // The username and password we've fetched earlier
            credentials {
                username userName
                password userPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
